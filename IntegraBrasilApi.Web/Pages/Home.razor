@page "/"

<PageTitle>Home</PageTitle>

<EditForm Model="EnderecoService" OnSubmit="Submit">
    <div cl ass="form-group">
        <h3>Digite o Cep</h3>
        <label>
            Cep:
            <InputText @bind-Value="Cep" />
        </label>
    </div>
    <div>
        <button type="submit">Enviar</button>
    </div>
</EditForm>


@if (Endereco.Cep is null)
{
    <h3></h3>
}
else
{
    @if (MessageError is not null)
    {
        <h2>@MessageError</h2>
    }
    else
    {
        <h3>Dados do Cep: "{@Cep}"</h3>
        <div class="row">
            <div class="col-md-6">
                <h2>@Cep</h2>
                <p class="mb-4">@Endereco.Etado</p>
                <p class="mb-4">@Endereco.Cidade</p>]
                <p class="mb-4">@Endereco.Regiao</p>
                <p class="mb-4">@Endereco.Rua</p>
            </div>
        </div>
    }
}

@code {


    [Inject]
    public IEnderecoServiceWeb? EnderecoService { get; set; }

    [SupplyParameterFromForm]
    public string? Cep { get; set; }

    public EnderecoDto? Endereco { get; set; }

    public string? MessageError { get; set; }

    protected override void OnInitialized() => Endereco ??= new();


    private void Submit()
    {
        if (Cep is not null)
        {
            GetEndereco();
        }
        else
        {
            MessageError = "Deve ser passado um cep para procurar";
        }
    }



    private async Task<EnderecoDto> GetEndereco()
    {
        try
        {
            Endereco = await EnderecoService.endereco(Cep);
            return Endereco;
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao fazer requisição");
        }
    }

}