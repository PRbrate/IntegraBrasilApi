@page "/"

<PageTitle>Home</PageTitle>

<EditForm Model="EnderecoService" OnSubmit="Submit">
    <form>
        <div class="form-group">
            <label for="CepInput">Digite o Cep</label>
            <InputText @bind-Value="Cep" class="form-control" id="CepInput" aria-describedby="CepHelp" placeholder="Cep desejado" />
            <small id="CepHelp" class="form-text text-muted">Digite o Cep para fazemor a requisição.</small>
        </div>
    </form>
    <div>
        <button type="submit" class="btn btn-primary">Enviar</button>
    </div>

    @* <div cl ass="form-group">
        <h3>Digite o Cep</h3>
        <label>
            Cep:
            <InputText @bind-Value="Cep" />
        </label>
    </div>
    <div>
        <button type="submit">Enviar</button>
    </div> *@
</EditForm>


@if (Endereco.Cep is null)
{
    <p>@MessageError</p>
}
else
{
    @if (MessageError is not null)
    {
        <p>@MessageError</p>
    }
    else
    {
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Cep</th>
                    <th scope="col">Estado</th>
                    <th scope="col">Cidade</th>
                    <th scope="col">Regiao</th>
                    <th scope="col">Rua</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <th scope="row">1</th>
                    <td>@Endereco.Cep</td>
                    <td>@Endereco.Etado</td>
                    <td>@Endereco.Cidade</td>
                    <td>@Endereco.Regiao</td>
                    <td>@Endereco.Rua</td>
                </tr>
            </tbody>
        </table>
    }
}

@code {


    [Inject]
    public IEnderecoServiceWeb? EnderecoService { get; set; }

    [SupplyParameterFromForm]
    public string? Cep { get; set; }

    public EnderecoDto? Endereco { get; set; }

    public string? MessageError { get; set; }

    protected override void OnInitialized() => Endereco ??= new();

        // protected override async Task OnInitializedAsync()
        // {
        //     await base.OnInitializedAsync();
        // }

    private async Task<bool> Submit()
    {
        if (Cep is not null)
        {
            Endereco = await EnderecoService.endereco(Cep);
        }
        else
        {
            MessageError = "Deve ser passado um cep para procurar";
        }
        return await Task.FromResult(true);

    }

    // private async Task<EnderecoDto> GetEndereco()
    // {
    //     try
    //     {
    //         Endereco = await EnderecoService.endereco(Cep);
    //         return Endereco;
    //     }
    //     catch (Exception ex)
    //     {
    //         MessageError = $"Erro ao fazer requisição";
    //         throw;
    //     }
    // }

}