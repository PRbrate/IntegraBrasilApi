@page "/"
@using IntegraBrasilApi.DTOs
@using IntegraBrasilApi.Web.Services.Interfaces

<PageTitle>Buscas Integra Brasil</PageTitle>

<FluentGrid Spacing="3" Justify="JustifyContent.Center" Style="margin-top:50px">
    <div>
        <h3>Requisições Cep, Banco e CNPJ</h3>
    </div>
</FluentGrid>
<FluentGrid Spacing="3" Justify="JustifyContent.Center" Style="margin-top:50px">
    @* Consulta CEP *@
    <FluentGridItem xs="6" sm="3">
        <EditForm Model="Endereco" method="post" FormName="consulta" OnValidSubmit="@Submit">

            <div class="form-group">
                <FluentTextField Appearance="FluentInputAppearance.Filled"
                                 Label="Consultar Cep:" @bind-Value="Cep"
                                 Maxlength="8" Minlength="8" Placeholder="Digite o cep" />
                <ValidationMessage For="() => Endereco!.Cep" class="text-danger" />
            </div>
            <FluentButton IconStart="@(new Icons.Regular.Size16.Globe())"
                          Appearance="Appearance.Accent" Type="ButtonType.Submit">
                Consultar Cep
            </FluentButton>
        </EditForm>
    </FluentGridItem>

    @* Consulta Banco *@
    <FluentGridItem xs="6" sm="3">
        <EditForm Model="Endereco" method="post" FormName="consultaBanco" OnValidSubmit="@Submit">
            <DataAnnotationsValidator />

            <div class="form-group">
                <FluentTextField Appearance="FluentInputAppearance.Filled"
                                 Label="Consultar Cep:" @bind-Value="Cep"
                                 Maxlength="8" Minlength="8" Placeholder="Digite Código do Banco" />
            </div>
            <FluentButton IconStart="@(new Icons.Regular.Size16.Globe())"
                          Appearance="Appearance.Accent" Type="ButtonType.Submit">
                Consultar Banco
            </FluentButton>
        </EditForm>
    </FluentGridItem>

    @* Consulta CNPJ *@
    <FluentGridItem xs="6" sm="3">
        <EditForm Model="Endereco" method="post" FormName="consultaCNPJ" OnValidSubmit="@Submit">
            <DataAnnotationsValidator />

            <div class="form-group">
                <FluentTextField Appearance="FluentInputAppearance.Filled"
                                 Label="Consultar Cep:" @bind-Value="Cep"
                                 Maxlength="8" Minlength="8" Placeholder="Digite o CNPJ" />
            </div>
            <FluentButton IconStart="@(new Icons.Regular.Size16.Globe())"
                          Appearance="Appearance.Accent" Type="ButtonType.Submit">
                Consultar CPNJ
            </FluentButton>
        </EditForm>
    </FluentGridItem>
</FluentGrid>

<FluentGrid Spacing="3" Justify="JustifyContent.Center" Style="margin-top:50px">
    <FluentCard Width="1000px" Height="300px">
        @if (Endereco.Cep is null)
        {
            <p>@MessageError</p>
        }
        else
        {
            @if (MessageError is not null)
            {
                <p>@MessageError</p>
            }
            else
            {
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">Cep</th>
                            <th scope="col">Estado</th>
                            <th scope="col">Cidade</th>
                            <th scope="col">Regiao</th>
                            <th scope="col">Rua</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <th scope="row">1</th>
                            <td>@Endereco.Cep</td>
                            <td>@Endereco.Etado</td>
                            <td>@Endereco.Cidade</td>
                            <td>@Endereco.Regiao</td>
                            <td>@Endereco.Rua</td>
                        </tr>
                    </tbody>
                </table>
            }
        }
    </FluentCard>
</FluentGrid>

@* <form>
    <div class="form-group">
        <label for="CepInput">Digite o Cep</label>
        <InputText @bind-Value="Cep" class="form-control" id="CepInput" aria-describedby="CepHelp" placeholder="Cep desejado" />
        <small id="CepHelp" class="form-text text-muted">Digite o Cep para fazemor a requisição.</small>
    </div>
</form>
<div>
    <button type="submit" class="btn btn-primary">Enviar</button>
</div>
 *@

@code {


    [Inject]
    public IEnderecoServiceFWeb? EnderecoService { get; set; }
    public string? Cep { get; set; }

    [SupplyParameterFromForm]
    public EnderecoDto? Endereco { get; set; }

    public string? MessageError { get; set; }

    protected override void OnInitialized() => Endereco ??= new();

    // protected override async Task OnInitializedAsync()
    // {
    //     await base.OnInitializedAsync();
    // }

    private async Task<bool> Submit()
    {
        if (Cep is not null)
        {
            Endereco = await EnderecoService.endereco(Cep);
        }
        else
        {
            MessageError = "Deve ser passado um cep para procurar";
        }
        return await Task.FromResult(true);

    }
}